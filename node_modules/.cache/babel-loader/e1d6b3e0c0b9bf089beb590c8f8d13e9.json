{"ast":null,"code":"var _jsxFileName = \"/Users/Edwin/Desktop/Programming/HomeWork/Click-Game/clicky/src/components/Game/index.js\";\nimport React, { Component } from \"react\";\nimport Card from \"../Card\"; // import Data from \"../../Fighter.json\";\n\nimport Nav from \"../Navbar\";\nimport Jumbotron from \"../Jumbotron\";\nimport './style.scss';\n\nclass Game extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      score: 0,\n      highscore: 0,\n      Data,\n      ClickedList: []\n    };\n\n    this.handleClick = id => {\n      const _this$state = this.state,\n            score = _this$state.score,\n            ClickedList = _this$state.ClickedList,\n            data = _this$state.data,\n            highscore = _this$state.highscore;\n      this.randomizeCards(data);\n      const clickedOn = ClickedList.includes(id);\n\n      if (clickedOn) {\n        const bestScore = Math.max(score, highscore);\n        this.resetGame(bestScore);\n      } else {\n        const newScore = score + 1;\n        this.setState({\n          score: score + 1,\n          ClickedList: [ClickedList, id]\n        });\n        if (newScore === data.length) this.resetGame(newScore);\n      }\n    };\n  }\n\n  componentDidMount() {\n    const data = this.state.data;\n    this.randomizeCards(data);\n  } //===clickevent\n\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51\n      },\n      __self: this\n    }, React.createElement(\"nav\", {\n      primaryHeadingText: \"Score:\",\n      primaryHeadingValue: this.state.score,\n      secondaryHeadingText: \"High Score:\",\n      secondaryHeadingValue: this.state.highscore,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52\n      },\n      __self: this\n    }), React.createElement(Jumbotron, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      class: \"cards\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, this.state.Data.map(card => React.createElement(Card, {\n      name: card.name,\n      image: card.image,\n      key: card.id,\n      id: card.id,\n      handleClick: this.handleClick,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default Game;","map":{"version":3,"sources":["/Users/Edwin/Desktop/Programming/HomeWork/Click-Game/clicky/src/components/Game/index.js"],"names":["React","Component","Card","Nav","Jumbotron","Game","state","score","highscore","Data","ClickedList","handleClick","id","data","randomizeCards","clickedOn","includes","bestScore","Math","max","resetGame","newScore","setState","length","componentDidMount","render","map","card","name","image"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,IAAP,MAAiB,SAAjB,C,CACA;;AACA,OAAOC,GAAP,MAAgB,WAAhB;AACA,OAAOC,SAAP,MAAsB,cAAtB;AACA,OAAO,cAAP;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;AAAA;AAAA;AAAA,SAGzBK,KAHyB,GAGjB;AACJC,MAAAA,KAAK,EAAE,CADH;AAEJC,MAAAA,SAAS,EAAE,CAFP;AAGJC,MAAAA,IAHI;AAIJC,MAAAA,WAAW,EAAE;AAJT,KAHiB;;AAAA,SAgBzBC,WAhByB,GAgBVC,EAAD,IAAQ;AAAA,0BAC8B,KAAKN,KADnC;AAAA,YACVC,KADU,eACVA,KADU;AAAA,YACHG,WADG,eACHA,WADG;AAAA,YACUG,IADV,eACUA,IADV;AAAA,YACgBL,SADhB,eACgBA,SADhB;AAElB,WAAKM,cAAL,CAAoBD,IAApB;AACA,YAAME,SAAS,GAAGL,WAAW,CAACM,QAAZ,CAAqBJ,EAArB,CAAlB;;AACA,UAAIG,SAAJ,EAAe;AACX,cAAME,SAAS,GAAGC,IAAI,CAACC,GAAL,CAASZ,KAAT,EAAgBC,SAAhB,CAAlB;AACA,aAAKY,SAAL,CAAeH,SAAf;AACH,OAHD,MAGO;AACH,cAAMI,QAAQ,GAAGd,KAAK,GAAG,CAAzB;AACA,aAAKe,QAAL,CAAc;AACVf,UAAAA,KAAK,EAAEA,KAAK,GAAG,CADL;AAEVG,UAAAA,WAAW,EAAE,CAACA,WAAD,EAAcE,EAAd;AAFH,SAAd;AAIA,YAAIS,QAAQ,KAAKR,IAAI,CAACU,MAAtB,EACI,KAAKH,SAAL,CAAeC,QAAf;AACP;AACJ,KAhCwB;AAAA;;AAUzBG,EAAAA,iBAAiB,GAAG;AAAA,UACRX,IADQ,GACC,KAAKP,KADN,CACRO,IADQ;AAEhB,SAAKC,cAAL,CAAoBD,IAApB;AACH,GAbwB,CAezB;;;AA0BAY,EAAAA,MAAM,GAAG;AACL,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACI;AACI,MAAA,kBAAkB,EAAC,QADvB;AAEI,MAAA,mBAAmB,EAAE,KAAKnB,KAAL,CAAWC,KAFpC;AAGI,MAAA,oBAAoB,EAAC,aAHzB;AAII,MAAA,qBAAqB,EAAE,KAAKD,KAAL,CAAWE,SAJtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,EAOI,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPJ,EAQI;AAAK,MAAA,KAAK,EAAC,OAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACK,KAAKF,KAAL,CAAWG,IAAX,CAAgBiB,GAAhB,CAAqBC,IAAD,IACjB,oBAAC,IAAD;AACI,MAAA,IAAI,EAAEA,IAAI,CAACC,IADf;AAEI,MAAA,KAAK,EAAED,IAAI,CAACE,KAFhB;AAGI,MAAA,GAAG,EAAEF,IAAI,CAACf,EAHd;AAII,MAAA,EAAE,EAAEe,IAAI,CAACf,EAJb;AAKI,MAAA,WAAW,EAAE,KAAKD,WALtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADH,CADL,CARJ,CADJ;AAsBH;;AAhEwB;;AAkE7B,eAAeN,IAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Card from \"../Card\";\n// import Data from \"../../Fighter.json\";\nimport Nav from \"../Navbar\";\nimport Jumbotron from \"../Jumbotron\";\nimport './style.scss';\n\nclass Game extends Component {\n\n    ///====State being declared\n    state = {\n        score: 0,\n        highscore: 0,\n        Data,\n        ClickedList: []\n    }\n\n    componentDidMount() {\n        const { data } = this.state;\n        this.randomizeCards(data);\n    }\n\n    //===clickevent\n    handleClick = (id) => {\n        const { score, ClickedList, data, highscore } = this.state;\n        this.randomizeCards(data)\n        const clickedOn = ClickedList.includes(id);\n        if (clickedOn) {\n            const bestScore = Math.max(score, highscore)\n            this.resetGame(bestScore);\n        } else {\n            const newScore = score + 1;\n            this.setState({\n                score: score + 1,\n                ClickedList: [ClickedList, id]\n            })\n            if (newScore === data.length)\n                this.resetGame(newScore);\n        }\n    }\n\n\n\n\n\n\n\n\n    render() {\n        return (\n            <div>\n                <nav\n                    primaryHeadingText=\"Score:\"\n                    primaryHeadingValue={this.state.score}\n                    secondaryHeadingText=\"High Score:\"\n                    secondaryHeadingValue={this.state.highscore}\n                />\n                <Jumbotron />\n                <div class=\"cards\">\n                    {this.state.Data.map((card) => (\n                        <Card\n                            name={card.name}\n                            image={card.image}\n                            key={card.id}\n                            id={card.id}\n                            handleClick={this.handleClick}\n                        />\n                    ))}\n                </div>\n            </div>\n        )\n    }\n}\nexport default Game;"]},"metadata":{},"sourceType":"module"}